#spring.profiles.active=local
#服务端口
server.port=8080
#自定义属性
welcome.message=Hello World!
#参数引用
my.name=william
my.age=28
my.info=My name is ${my.name} and ${my.age} years old
#随机字符串
random.string=${random.value}
#随机int
random.number=${random.int}
#随机long
random.long=${random.long}
#1-20的随机数
random.range=${random.int[1,20]}
#swagger配置
enable.swagger=true
base.package.swagger=com.architect.controller.swagger
#=======================================================================
#   Thymeleaf的配置
#=======================================================================
spring.thymeleaf.cache=false
#=======================================================================
#   MySQL数据库配置
#=======================================================================
spring.datasource.url=jdbc:mysql://localhost:3306/architect1?useSSL=true&useUnicode=true&characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
mybatis.mapper-locations=classpath:mapper/*.xml
#=======================================================================
#   Redis单机版配置
#=======================================================================
#Redis数据库索引（默认为0）
#spring.redis.database=0
#Redis服务器地址
#spring.redis.host=127.0.0.1
#Redis服务器连接端口
#spring.redis.port=6379
#Redis服务器连接密码（默认为空）
#spring.redis.password=
#连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
#连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
#连接池中的最大空闲连接
spring.redis.pool.max-idle=8
#连接池中的最小空闲连接
spring.redis.pool.min-idle=0
#连接超时时间（毫秒）
spring.redis.timeout=0
#=======================================================================
#   Redis集群版配置
#=======================================================================
#spring.redis.clusterNodes=192.168.35.100:7001,192.168.35.100:7002,192.168.35.101:7001,192.168.35.101:7002,192.168.35.102:7001,192.168.35.102:7002
spring.redis.clusterNodes=60.205.212.141:6379,60.205.212.141:6380,60.205.212.141:6381
#=======================================================================
#   RabbitMQ配置
#=======================================================================
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=springboot
spring.rabbitmq.password=springboot
#=======================================================================
#   日志配置
#=======================================================================
#debug=true
#logging.level.root=INFO
#logging.level.org.springframework.web=DEBUG
#logging.level.com.example.boot.controller=DEBUG
#日志文件
#logging.file = root.log
#=======================================================================
#   自定义starter
#=======================================================================
#custom.message=Hello Custom Starter!
#=======================================================================
#   ShardingJDBC配置
#=======================================================================
sharding.jdbc.datasource.names=ds_0,ds_1
sharding.jdbc.datasource.ds_0.type=org.apache.commons.dbcp.BasicDataSource
sharding.jdbc.datasource.ds_0.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.ds_0.url=jdbc:mysql://localhost:3306/ds_0?useSSL=true&useUnicode=true&characterEncoding=utf8
sharding.jdbc.datasource.ds_0.username=root
sharding.jdbc.datasource.ds_0.password=root

sharding.jdbc.datasource.ds_1.type=org.apache.commons.dbcp.BasicDataSource
sharding.jdbc.datasource.ds_1.driver-class-name=com.mysql.jdbc.Driver
sharding.jdbc.datasource.ds_1.url=jdbc:mysql://localhost:3306/ds_1?useSSL=true&useUnicode=true&characterEncoding=utf8
sharding.jdbc.datasource.ds_1.username=root
sharding.jdbc.datasource.ds_1.password=root

sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=user_id
sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=ds_$->{user_id % 2}

sharding.jdbc.config.sharding.tables.t_order.actual-data-nodes=ds_$->{0..1}.t_order_$->{0..1}
sharding.jdbc.config.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
sharding.jdbc.config.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order_$->{order_id % 2}
sharding.jdbc.config.sharding.tables.t_order.key-generator-column-name=order_id
sharding.jdbc.config.sharding.tables.t_order_item.actual-data-nodes=ds_$->{0..1}.t_order_item_$->{0..1}
sharding.jdbc.config.sharding.tables.t_order_item.table-strategy.inline.sharding-column=order_id
sharding.jdbc.config.sharding.tables.t_order_item.table-strategy.inline.algorithm-expression=t_order_item_$->{order_id % 2}
sharding.jdbc.config.sharding.tables.t_order_item.key-generator-column-name=order_item_id
#=======================================================================
#   发送邮件配置
#=======================================================================
spring.mail.default-encoding=GBK
#发送方电子邮箱服务器
spring.mail.host=smtp.qq.com
#发送方邮箱账号
spring.mail.username=569838709@qq.com
#发送方邮箱授权码
spring.mail.password=ymwfxhoplkyrbbgh
#=======================================================================
#   线程池配置
#=======================================================================
default.pool.corePoolSize=5
default.pool.maxPoolSize=200
default.pool.keepAliveSeconds=600
default.pool.queueCapacity=50

task1.pool.corePoolSize=1
task1.pool.maxPoolSize=10
task1.pool.keepAliveSeconds=600
task1.pool.queueCapacity=5

#dozer.mapping-files=classpath*:/*mapping.xml
